pipeline {
    agent {
        label 'master'
    }
    triggers {
        cron("H 21 * * *")
    }
    environment {
        DEFAULT_NIGHTLY_FLAG = 'nightly'
    }
    options {
        skipDefaultCheckout()
    }
    stages {
        stage ("Trigger nightly builds") {
            parallel {
                stage ("develop") {
                    steps {
                        script {
                            def build = build job: 'ParametrizedTestPipeline_ExultantRhino',
                            parameters: [
                                string(name: 'FLAG', value: DEFAULT_NIGHTLY_FLAG),
                                string(name: 'BRANCH', value: 'develop'),
                                string(name: 'TEST_GROUP', value: 'streamlit')
                            ]
                        }
                    }
                }
                stage ("master") {
                    steps {
                        script {
                            def build = build job: 'ParametrizedTestPipeline_ExultantRhino',
                            parameters: [
                                string(name: 'FLAG', value: DEFAULT_NIGHTLY_FLAG),
                                string(name: 'BRANCH', value: 'master'),
                                string(name: 'TEST_GROUP', value: 'streamlit')
                            ]
                        }
                    }
                }
            }
        }
            steps {
                script {
                    def build = build job: 'PythonDependenciesVerification_ExultantRhino',
                    propagate: false
                    if (build.result != 'SUCCESS') {
                        unstable('Stage reported as unstable')
                    }
                }
            }
        }
        stage ("Scan docker images") {
            steps {
                script {
                def build = build job: 'ScanDockerImages_ExultantRhino',
                propagate: false
                    if (build.result != 'SUCCESS') {
                        unstable('Stage reported as unstable')
                    }
                }
            }
        }
        stage ("Trigger nightly builds") {
            parallel {
                stage ("develop") {
                    steps {
                        script {
                            def build = build job: 'ParametrizedTestPipeline_CarelessVaquita',
                            parameters: [
                                string(name: 'FLAG', value: DEFAULT_NIGHTLY_FLAG),
                                string(name: 'BRANCH', value: 'develop')
                            ]
                        }
                    }
                }
                stage ("master") {
                    steps {
                        script {
                            def build = build job: 'ParametrizedTestPipeline_CarelessVaquita',
                            parameters: [
                                string(name: 'FLAG', value: DEFAULT_NIGHTLY_FLAG),
                                string(name: 'BRANCH', value: 'master')
                            ]
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}