pipeline {
    agent any
    triggers {
        cron("H 6 * * *")
    }
    stages {
        stage ("Analyze images") {
            parallel {
                stage ("docker scout") {
                    steps {
                        script {
                            withCredentials([usernamePassword(credentialsId: "dockerhub_id", usernameVariable: "USERNAME", passwordVariable: "PASSWORD")]) {
                                sh "docker login --username $USERNAME --password $PASSWORD"
                                sh "chmod +x tools/shell_scripts/scan_docker_scout.sh"
                                return_value = sh(script: "tools/shell_scripts/scan_docker_scout.sh", returnStdout: true).trim()
                                if (return_value.contains("Script failed, because vulnerabilities were found.")) {
                                    unstable(return_value)
                                }
                            }
                        }
                    }
                }
                stage ("Experimental: trivy") {
                    steps {
                        script {
                            sh "chmod +x tools/shell_scripts/scan_docker_trivy.sh"
                            sh "tools/shell_scripts/scan_docker_trivy.sh"
                        }
                    }
                }
                stage ("Experimental: dive") {
                    steps {
                        script {
                            sh "chmod +x tools/shell_scripts/scan_docker_dive.sh"
                            sh "tools/shell_scripts/scan_docker_dive.sh"
                        }
                    }
                }
                stage ("TBA: clair") {
                    steps {
                        script {
                            sh "echo TBA"
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            sh "docker logout"
            archiveArtifacts artifacts: "scan_*", followSymlinks: false
            cleanWs()
        }
    }
}